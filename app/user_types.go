// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "pos": Application User Types
//
// Command:
// $ goagen
// --design=github.com/psavelis/goa-pos-poc/design
// --out=$(GOPATH)src\github.com\psavelis\goa-pos-poc
// --version=v1.3.0

package app

import (
	"github.com/goadesign/goa"
	"gopkg.in/mgo.v2/bson"
	"unicode/utf8"
)

// Detailed information regarding a POS purchase operation
type purchasePayload struct {
	ID *bson.ObjectId `bson:"_id,omitempty"`
	// Operation reference code
	Locator *string `bson:"locator,omitempty"`
	// Total amount paid
	PurchaseValue *float64 `bson:"purchase_value,omitempty"`
}

// Validate validates the purchasePayload type instance.
func (ut *purchasePayload) Validate() (err error) {
	if ut.Locator == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`request`, "locator"))
	}
	if ut.PurchaseValue == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`request`, "purchase_value"))
	}
	if ut.Locator != nil {
		if utf8.RuneCountInString(*ut.Locator) < 1 {
			err = goa.MergeErrors(err, goa.InvalidLengthError(`request.locator`, *ut.Locator, utf8.RuneCountInString(*ut.Locator), 1, true))
		}
	}
	if ut.Locator != nil {
		if utf8.RuneCountInString(*ut.Locator) > 30 {
			err = goa.MergeErrors(err, goa.InvalidLengthError(`request.locator`, *ut.Locator, utf8.RuneCountInString(*ut.Locator), 30, false))
		}
	}
	if ut.PurchaseValue != nil {
		if *ut.PurchaseValue < 0.010000 {
			err = goa.MergeErrors(err, goa.InvalidRangeError(`request.purchase_value`, *ut.PurchaseValue, 0.010000, true))
		}
	}
	return
}

// Publicize creates PurchasePayload from purchasePayload
func (ut *purchasePayload) Publicize() *PurchasePayload {
	var pub PurchasePayload
	if ut.ID != nil {
		pub.ID = ut.ID
	}
	if ut.Locator != nil {
		pub.Locator = *ut.Locator
	}
	if ut.PurchaseValue != nil {
		pub.PurchaseValue = *ut.PurchaseValue
	}
	return &pub
}

// Detailed information regarding a POS purchase operation
type PurchasePayload struct {
	ID *bson.ObjectId `bson:"_id,omitempty"`
	// Operation reference code
	Locator string `bson:"locator,omitempty"`
	// Total amount paid
	PurchaseValue float64 `bson:"purchase_value,omitempty"`
}

// Validate validates the PurchasePayload type instance.
func (ut *PurchasePayload) Validate() (err error) {
	if ut.Locator == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`type`, "locator"))
	}

	if utf8.RuneCountInString(ut.Locator) < 1 {
		err = goa.MergeErrors(err, goa.InvalidLengthError(`type.locator`, ut.Locator, utf8.RuneCountInString(ut.Locator), 1, true))
	}
	if utf8.RuneCountInString(ut.Locator) > 30 {
		err = goa.MergeErrors(err, goa.InvalidLengthError(`type.locator`, ut.Locator, utf8.RuneCountInString(ut.Locator), 30, false))
	}
	if ut.PurchaseValue < 0.010000 {
		err = goa.MergeErrors(err, goa.InvalidRangeError(`type.purchase_value`, ut.PurchaseValue, 0.010000, true))
	}
	return
}
